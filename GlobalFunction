_G.Kill = function(playerchar)
    local args = {
        [1] = "FireOtherClients",
        [2] = "drawLaser",
        [3] = Vector3.new(0, 0, 0),
        [4] = Vector3.new(0, 0, 0), --[[Vector3]]
        [5] = {
            ["Name"] = "Head",
            ["CFrame"] = playerchar.Head.CFrame,
            ["Material"] = Enum.Material.ForceField,
            ["Parent"] = playerchar,
            ["Size"] = Vector3.new(2, 1, 1),
            ["Transparency"] = 1
        }
    }
  
    workspace.resources.RemoteEvent:FireServer(unpack(args))
end

_G.MakePart = function(part,BreakOnDeath,waittime)
    local waittime = waittime
    local part = part
    local BreakOnDeath = BreakOnDeath

    local Players = game:GetService("Players")
    local broken = false

    local Dependencies = loadstring(game:HttpGet(("https://raw.githubusercontent.com/iiX0Lords/Building/main/Dependency1"),true))()

    if Dependencies == false then
        broken = true
    end

	local parent = part.Parent --- Gets the parent of the Instance you called

      parent.ChildRemoved:connect(function(Obj) --- When the parent of the part has a Instance removed this fires
             if Obj == part then --- If the part that was destoyed is the Part
               broken = true
           end
         end)      

    local loop = coroutine.create(function() --- Creates the loop

        while true do task.wait(waittime) --- Shorter the wait the cleaner the part will look but will cause more lag so pick your poison
                local fakePart = part --- Just sets that variable because im to lazy to edit the fire laser arguments          
                



                if broken == false then --- So if the part is destroyed stop running
                
                --- Positioning
                local arg3 = fakePart.Position + Vector3.new(0,.1,0) --- Remote requires Point A and Point B to be different so i just made it .1 difference
                local arg4 = fakePart.Position

                --- Arguments for the part (dont edit because its already set up good enough)
                local args = {
                    [1] = "FireOtherClients",
                    [2] = "drawLaser",
                    [3] = arg3,
                    [4] = arg4, --[[Vector3]]
                    [5] = {
                        ["Material"] = fakePart.Material,
                        ["BrickColor"] = fakePart.BrickColor,
                        ["Reflectance"] = 0,
                        ["CanCollide"] = fakePart.CanCollide,
                        ["Orientation"] = fakePart.Orientation,
                        ["Shape"] = fakePart.Shape,
                        ["Velocity"] = fakePart.Velocity,
                        ["Size"] = fakePart.Size,
                        ["Transparency"] = fakePart.Transparency
                    }
                }

                workspace.resources.RemoteEvent:FireServer(unpack(args))
                    else
                        coroutine.yield()
                    break
                end
                --- If you chose to then when your player dies break the loop and destroy the parts
                if game.Players.LocalPlayer.Character.Humanoid.Health <= 0 and BreakOnDeath == true then
                    fakePart:Destroy()
                    break
                end
            end
        end)
    coroutine.resume(loop) --- Plays the loop
end
